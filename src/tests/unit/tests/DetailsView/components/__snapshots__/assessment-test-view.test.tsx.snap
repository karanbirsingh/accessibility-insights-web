// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AssessmentTestView renders with a GettingStartedView when a Getting started item is selected 1`] = `
<React.Fragment>
  <ScanIncompleteWarning
    deps={
      Object {
        "assessmentsProvider": Object {
          "forType": [Function],
        },
        "detailsViewActionMessageCreator": Object {},
      }
    }
    test={-1}
    warningConfiguration={Object {}}
  />
  <TargetChangeDialog
    deps={
      Object {
        "assessmentsProvider": Object {
          "forType": [Function],
        },
        "detailsViewActionMessageCreator": Object {},
      }
    }
    newTab={
      Object {
        "id": -2,
        "title": "test title",
        "url": "test url",
      }
    }
  />
  <GettingStartedView
    assessment={Object {}}
    deps={
      Object {
        "assessmentsProvider": Object {
          "forType": [Function],
        },
        "detailsViewActionMessageCreator": Object {},
      }
    }
  />
</React.Fragment>
`;

exports[`AssessmentTestView renders with a RequirementView when a requirement is selected 1`] = `
<React.Fragment>
  <ScanIncompleteWarning
    deps={
      Object {
        "assessmentsProvider": Object {
          "forType": [Function],
        },
        "detailsViewActionMessageCreator": Object {},
      }
    }
    test={-1}
    warningConfiguration={Object {}}
  />
  <TargetChangeDialog
    deps={
      Object {
        "assessmentsProvider": Object {
          "forType": [Function],
        },
        "detailsViewActionMessageCreator": Object {},
      }
    }
    newTab={
      Object {
        "id": -2,
        "title": "test title",
        "url": "test url",
      }
    }
  />
  <RequirementView
    assessmentData={Object {}}
    assessmentInstanceTableHandler={Object {}}
    assessmentNavState={
      Object {
        "selectedTestSubview": "step",
        "selectedTestType": -1,
      }
    }
    currentTarget={
      Object {
        "id": -2,
        "title": "test title",
        "url": "test url",
      }
    }
    deps={
      Object {
        "assessmentsProvider": Object {
          "forType": [Function],
        },
        "detailsViewActionMessageCreator": Object {},
      }
    }
    featureFlagStoreData={Object {}}
    isRequirementEnabled={false}
    pathSnippetStoreData={Object {}}
    scanningInProgress={true}
  />
</React.Fragment>
`;
